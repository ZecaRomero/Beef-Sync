"use strict";(()=>{var e={};e.id=826,e.ids=[826],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7325:(e,r,o)=>{o.r(r),o.d(r,{config:()=>l,default:()=>c,routeModule:()=>p});var a={};o.r(a),o.d(a,{default:()=>handler});var t=o(1802),d=o(7153),s=o(8781),i=o(3524);let n=new i.PrismaClient;async function handler(e,r){if("GET"===e.method)try{let e=await n.invoice.findMany({select:{compradorNome:!0,compradorCpfCnpj:!0,compradorEndereco:!0,compradorCidade:!0,compradorEstado:!0,compradorCep:!0},distinct:["compradorNome"]});r.status(200).json(e)}catch(e){console.error("Erro ao buscar compradores:",e),r.status(500).json({error:"Erro interno do servidor"})}else r.setHeader("Allow",["GET"]),r.status(405).end(`Method ${e.method} Not Allowed`)}let c=(0,s.l)(a,"default"),l=(0,s.l)(a,"config"),p=new t.PagesAPIRouteModule({definition:{kind:d.x.PAGES_API,page:"/api/buyers",pathname:"/api/buyers",bundlePath:"",filename:""},userland:a})}};var r=require("../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),o=r.X(0,[4222],()=>__webpack_exec__(7325));module.exports=o})();