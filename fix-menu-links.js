// CORRE√á√ÉO DOS LINKS DO MENU - Execute no console
console.log('üîß CORRIGINDO LINKS DO MENU USU√ÅRIO');

// Fun√ß√£o para testar se as p√°ginas existem
function testPageExists(url) {
    return fetch(url, { method: 'HEAD' })
        .then(response => response.ok)
        .catch(() => false);
}

// Fun√ß√£o para navegar com verifica√ß√£o
async function safeNavigate(url, pageName) {
    console.log(`üîç Verificando ${pageName}...`);
    
    try {
        // Tentar navegar diretamente
        window.location.href = url;
        console.log(`‚úÖ Navegando para ${pageName}`);
    } catch (error) {
        console.log(`‚ùå Erro ao navegar para ${pageName}:`, error);
    }
}

// Fun√ß√µes para cada p√°gina
window.irParaPerfil = () => safeNavigate('/profile', 'Perfil');
window.irParaConfiguracoes = () => safeNavigate('/settings', 'Configura√ß√µes');
window.irParaUsuarios = () => safeNavigate('/users', 'Usu√°rios');

console.log('‚úÖ CORRE√á√ÉO APLICADA!');
console.log('');
console.log('üéØ COMANDOS DISPON√çVEIS:');
console.log('- irParaPerfil() - Ir para p√°gina de Perfil');
console.log('- irParaConfiguracoes() - Ir para p√°gina de Configura√ß√µes');
console.log('- irParaUsuarios() - Ir para p√°gina de Usu√°rios');
console.log('');
console.log('üìã TESTE MANUAL:');
console.log('1. Digite: irParaPerfil()');
console.log('2. Digite: irParaConfiguracoes()');
console.log('3. Digite: irParaUsuarios()');
console.log('');
console.log('üîó OU DIGITE DIRETAMENTE NA URL:');
console.log('- /profile');
console.log('- /settings');
console.log('- /users');